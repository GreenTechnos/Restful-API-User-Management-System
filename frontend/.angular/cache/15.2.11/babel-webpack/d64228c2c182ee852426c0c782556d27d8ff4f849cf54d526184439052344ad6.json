{"ast":null,"code":"import { environment } from '@environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst baseUrl = `${environment.apiUrl}/requests`;\nexport let RequestService = /*#__PURE__*/(() => {\n  class RequestService {\n    constructor(http) {\n      this.http = http;\n    }\n    // Create a new request\n    create(params) {\n      return this.http.post(baseUrl, params);\n    }\n    // Get all requests (Admin only)\n    getAll() {\n      return this.http.get(baseUrl);\n    }\n    // Get request by ID\n    getById(id) {\n      return this.http.get(`${baseUrl}/${id}`);\n    }\n    // Get requests for an employee\n    getByEmployeeId(employeeId) {\n      return this.http.get(`${baseUrl}/employee/${employeeId}`);\n    }\n    // Get requests created by current employee\n    getMyRequests() {\n      return this.http.get(`${baseUrl}/my-requests`);\n    }\n    // Get assigned requests\n    getAssignedRequests() {\n      return this.http.get(`${baseUrl}/assigned`);\n    }\n    // Update request\n    update(id, params) {\n      return this.http.put(`${baseUrl}/${id}`, params);\n    }\n    // Delete request (Admin only)\n    delete(id) {\n      return this.http.delete(`${baseUrl}/${id}`);\n    }\n    // Update request status\n    changeStatus(id, status, notes = '') {\n      return this.http.put(`${baseUrl}/${id}/status`, {\n        status,\n        notes\n      });\n    }\n  }\n  RequestService.ɵfac = function RequestService_Factory(t) {\n    return new (t || RequestService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  RequestService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: RequestService,\n    factory: RequestService.ɵfac,\n    providedIn: 'root'\n  });\n  return RequestService;\n})();","map":{"version":3,"mappings":"AAIA,SAASA,WAAW,QAAQ,2BAA2B;;;AAGvD,MAAMC,OAAO,GAAG,GAAGD,WAAW,CAACE,MAAM,WAAW;AAGhD,WAAaC,cAAc;EAArB,MAAOA,cAAc;IACvBC,YAAoBC,IAAgB;MAAhB,SAAI,GAAJA,IAAI;IAAgB;IAExC;IACAC,MAAM,CAACC,MAAW;MACd,OAAO,IAAI,CAACF,IAAI,CAACG,IAAI,CAACP,OAAO,EAAEM,MAAM,CAAC;IAC1C;IAEA;IACAE,MAAM;MACF,OAAO,IAAI,CAACJ,IAAI,CAACK,GAAG,CAACT,OAAO,CAAC;IACjC;IAEA;IACAU,OAAO,CAACC,EAAU;MACd,OAAO,IAAI,CAACP,IAAI,CAACK,GAAG,CAAU,GAAGT,OAAO,IAAIW,EAAE,EAAE,CAAC;IACrD;IAEA;IACAC,eAAe,CAACC,UAAkB;MAC9B,OAAO,IAAI,CAACT,IAAI,CAACK,GAAG,CAAC,GAAGT,OAAO,aAAaa,UAAU,EAAE,CAAC;IAC7D;IAEA;IACAC,aAAa;MACT,OAAO,IAAI,CAACV,IAAI,CAACK,GAAG,CAAY,GAAGT,OAAO,cAAc,CAAC;IAC7D;IAEA;IACAe,mBAAmB;MACf,OAAO,IAAI,CAACX,IAAI,CAACK,GAAG,CAAC,GAAGT,OAAO,WAAW,CAAC;IAC/C;IAEA;IACAgB,MAAM,CAACL,EAAU,EAAEL,MAAW;MAC1B,OAAO,IAAI,CAACF,IAAI,CAACa,GAAG,CAAC,GAAGjB,OAAO,IAAIW,EAAE,EAAE,EAAEL,MAAM,CAAC;IACpD;IAEA;IACAY,MAAM,CAACP,EAAU;MACb,OAAO,IAAI,CAACP,IAAI,CAACc,MAAM,CAAC,GAAGlB,OAAO,IAAIW,EAAE,EAAE,CAAC;IAC/C;IAEA;IACAQ,YAAY,CAACR,EAAU,EAAES,MAAc,EAAEC,QAAgB,EAAE;MACvD,OAAO,IAAI,CAACjB,IAAI,CAACa,GAAG,CAAC,GAAGjB,OAAO,IAAIW,EAAE,SAAS,EAAE;QAAES,MAAM;QAAEC;MAAK,CAAE,CAAC;IACtE;;;qBA9CSnB,cAAc;EAAA;;WAAdA,cAAc;IAAAoB,SAAdpB,cAAc;IAAAqB,YADD;EAAM;EAAA,OACnBrB,cAAc;AAAA","names":["environment","baseUrl","apiUrl","RequestService","constructor","http","create","params","post","getAll","get","getById","id","getByEmployeeId","employeeId","getMyRequests","getAssignedRequests","update","put","delete","changeStatus","status","notes","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\User\\Desktop\\Restful-API-User-Management-System-backend-postrero\\frontend\\src\\app\\_services\\request.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { environment } from '@environments/environment';\nimport { Request } from '@app/_models/request';\n\nconst baseUrl = `${environment.apiUrl}/requests`;\n\n@Injectable({ providedIn: 'root' })\nexport class RequestService {\n    constructor(private http: HttpClient) { }\n\n    // Create a new request\n    create(params: any) {\n        return this.http.post(baseUrl, params);\n    }\n\n    // Get all requests (Admin only)\n    getAll() {\n        return this.http.get(baseUrl);\n    }\n\n    // Get request by ID\n    getById(id: string): Observable<Request> {\n        return this.http.get<Request>(`${baseUrl}/${id}`);\n    }\n\n    // Get requests for an employee\n    getByEmployeeId(employeeId: string) {\n        return this.http.get(`${baseUrl}/employee/${employeeId}`);\n    }\n\n    // Get requests created by current employee\n    getMyRequests() {\n        return this.http.get<Request[]>(`${baseUrl}/my-requests`);\n    }\n\n    // Get assigned requests\n    getAssignedRequests() {\n        return this.http.get(`${baseUrl}/assigned`);\n    }\n\n    // Update request\n    update(id: string, params: any) {\n        return this.http.put(`${baseUrl}/${id}`, params);\n    }\n\n    // Delete request (Admin only)\n    delete(id: string) {\n        return this.http.delete(`${baseUrl}/${id}`);\n    }\n\n    // Update request status\n    changeStatus(id: string, status: string, notes: string = '') {\n        return this.http.put(`${baseUrl}/${id}/status`, { status, notes });\n    }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}