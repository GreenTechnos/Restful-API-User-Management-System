{"ast":null,"code":"import { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport let ModalService = /*#__PURE__*/(() => {\n  class ModalService {\n    constructor() {\n      this.modalSubject = new Subject();\n      this.modalResponse = new Subject();\n      this.modal$ = this.modalSubject.asObservable();\n      this.response$ = this.modalResponse.asObservable();\n    }\n    show(data) {\n      this.modalSubject.next(Object.assign(Object.assign({}, data), {\n        action: 'open'\n      }));\n      return this.response$;\n    }\n    close(id) {\n      this.modalSubject.next({\n        id,\n        action: 'close'\n      });\n    }\n    confirm() {\n      this.modalResponse.next(true);\n    }\n    cancel() {\n      this.modalResponse.next(false);\n    }\n  }\n  ModalService.ɵfac = function ModalService_Factory(t) {\n    return new (t || ModalService)();\n  };\n  ModalService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ModalService,\n    factory: ModalService.ɵfac,\n    providedIn: 'root'\n  });\n  return ModalService;\n})();","map":{"version":3,"mappings":"AACA,SAASA,OAAO,QAAQ,MAAM;;AA2B9B,WAAaC,YAAY;EAAnB,MAAOA,YAAY;IADzBC;MAEY,iBAAY,GAAG,IAAIF,OAAO,EAAa;MACvC,kBAAa,GAAG,IAAIA,OAAO,EAAW;MAE9C,WAAM,GAAG,IAAI,CAACG,YAAY,CAACC,YAAY,EAAE;MACzC,cAAS,GAAG,IAAI,CAACC,aAAa,CAACD,YAAY,EAAE;;IAE7CE,IAAI,CAACC,IAAe;MAChB,IAAI,CAACJ,YAAY,CAACK,IAAI,iCAAMD,IAAI;QAAEE,MAAM,EAAE;MAAM,GAAG;MACnD,OAAO,IAAI,CAACC,SAAS;IACzB;IAEAC,KAAK,CAACC,EAAU;MACZ,IAAI,CAACT,YAAY,CAACK,IAAI,CAAC;QAAEI,EAAE;QAAEH,MAAM,EAAE;MAAO,CAAE,CAAC;IACnD;IAEAI,OAAO;MACH,IAAI,CAACR,aAAa,CAACG,IAAI,CAAC,IAAI,CAAC;IACjC;IAEAM,MAAM;MACF,IAAI,CAACT,aAAa,CAACG,IAAI,CAAC,KAAK,CAAC;IAClC;;;qBAtBSP,YAAY;EAAA;;WAAZA,YAAY;IAAAc,SAAZd,YAAY;IAAAe,YADC;EAAM;EAAA,OACnBf,YAAY;AAAA","names":["Subject","ModalService","constructor","modalSubject","asObservable","modalResponse","show","data","next","action","response$","close","id","confirm","cancel","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\User\\Desktop\\Restful-API-User-Management-System-backend-postrero\\frontend\\src\\app\\_services\\modal.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\nexport interface ModalData {\n    action?: 'open' | 'close';\n    id?: string;\n    title?: string;\n    message?: string;\n    content?: string;\n    confirmText?: string;\n    cancelText?: string;\n    showCancel?: boolean;\n    showFooter?: boolean;\n    showConfirm?: boolean;\n    closeOnBackdrop?: boolean;\n    onConfirm?: () => void;\n    data?: {\n        title?: string;\n        content?: string;\n        showFooter?: boolean;\n        showConfirm?: boolean;\n        confirmText?: string;\n        closeOnBackdrop?: boolean;\n        onConfirm?: () => void;\n    };\n}\n\n@Injectable({ providedIn: 'root' })\nexport class ModalService {\n    private modalSubject = new Subject<ModalData>();\n    private modalResponse = new Subject<boolean>();\n\n    modal$ = this.modalSubject.asObservable();\n    response$ = this.modalResponse.asObservable();\n\n    show(data: ModalData) {\n        this.modalSubject.next({ ...data, action: 'open' });\n        return this.response$;\n    }\n\n    close(id: string) {\n        this.modalSubject.next({ id, action: 'close' });\n    }\n\n    confirm() {\n        this.modalResponse.next(true);\n    }\n\n    cancel() {\n        this.modalResponse.next(false);\n    }\n} "]},"metadata":{},"sourceType":"module","externalDependencies":[]}