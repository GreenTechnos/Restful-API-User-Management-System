{"ast":null,"code":"// custom validator to check that two fields match\nexport function MustMatch(controlName, matchingControlName) {\n  return formGroup => {\n    const control = formGroup.controls[controlName];\n    const matchingControl = formGroup.controls[matchingControlName];\n    if (matchingControl.errors && !matchingControl.errors.mustMatch) {\n      // return if another validator has already found an error on the matchingControl\n      return;\n    }\n    // set error on matchingControl if validation fails\n    if (control.value !== matchingControl.value) {\n      matchingControl.setErrors({\n        mustMatch: true\n      });\n    } else {\n      matchingControl.setErrors(null);\n    }\n  };\n}","map":{"version":3,"mappings":"AAGA;AACA,OAAM,SAAUA,SAAS,CAACC,WAAmB,EAAEC,mBAA2B;EACtE,OAAQC,SAA2B,IAAI;IACnC,MAAMC,OAAO,GAAGD,SAAS,CAACE,QAAQ,CAACJ,WAAW,CAAC;IAC/C,MAAMK,eAAe,GAAGH,SAAS,CAACE,QAAQ,CAACH,mBAAmB,CAAC;IAE/D,IAAII,eAAe,CAACC,MAAM,IAAI,CAACD,eAAe,CAACC,MAAM,CAACC,SAAS,EAAE;MAC7D;MACA;;IAGJ;IACA,IAAIJ,OAAO,CAACK,KAAK,KAAKH,eAAe,CAACG,KAAK,EAAE;MACzCH,eAAe,CAACI,SAAS,CAAC;QAAEF,SAAS,EAAE;MAAI,CAAE,CAAC;KACjD,MAAM;MACHF,eAAe,CAACI,SAAS,CAAC,IAAI,CAAC;;EAEvC,CAAC;AACL","names":["MustMatch","controlName","matchingControlName","formGroup","control","controls","matchingControl","errors","mustMatch","value","setErrors"],"sourceRoot":"","sources":["C:\\Users\\User\\Desktop\\Restful-API-User-Management-System-backend-postrero\\frontend\\src\\app\\_helpers\\must-match.validator.ts"],"sourcesContent":["// must-match.validator.ts\nimport { UntypedFormGroup } from '@angular/forms';\n\n// custom validator to check that two fields match\nexport function MustMatch(controlName: string, matchingControlName: string) {\n    return (formGroup: UntypedFormGroup) => {\n        const control = formGroup.controls[controlName];\n        const matchingControl = formGroup.controls[matchingControlName];\n\n        if (matchingControl.errors && !matchingControl.errors.mustMatch) {\n            // return if another validator has already found an error on the matchingControl\n            return;\n        }\n\n        // set error on matchingControl if validation fails\n        if (control.value !== matchingControl.value) {\n            matchingControl.setErrors({ mustMatch: true });\n        } else {\n            matchingControl.setErrors(null);\n        }\n    };\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}