{"ast":null,"code":"import { Subject } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { Alert, AlertType } from '@app/_models';\nimport * as i0 from \"@angular/core\";\nexport let AlertService = /*#__PURE__*/(() => {\n  class AlertService {\n    constructor() {\n      this.subject = new Subject();\n      this.defaultId = 'default-alert';\n    }\n    // enable subscribing to alerts observable\n    onAlert(id = this.defaultId) {\n      return this.subject.asObservable().pipe(filter(x => x && x.id === id));\n    }\n    // convenience methods\n    success(message, options) {\n      this.alert(new Alert(Object.assign(Object.assign({}, options), {\n        type: AlertType.Success,\n        message,\n        priority: (options === null || options === void 0 ? void 0 : options.priority) || 10,\n        autoClose: (options === null || options === void 0 ? void 0 : options.autoClose) !== undefined ? options.autoClose : true\n      })));\n    }\n    error(message, options) {\n      this.alert(new Alert(Object.assign(Object.assign({}, options), {\n        type: AlertType.Error,\n        message,\n        priority: (options === null || options === void 0 ? void 0 : options.priority) || 10,\n        autoClose: (options === null || options === void 0 ? void 0 : options.autoClose) !== undefined ? options.autoClose : true\n      })));\n    }\n    info(message, options) {\n      this.alert(new Alert(Object.assign(Object.assign({}, options), {\n        type: AlertType.Info,\n        message,\n        priority: (options === null || options === void 0 ? void 0 : options.priority) || 5,\n        autoClose: (options === null || options === void 0 ? void 0 : options.autoClose) !== undefined ? options.autoClose : true\n      })));\n    }\n    warn(message, options) {\n      this.alert(new Alert(Object.assign(Object.assign({}, options), {\n        type: AlertType.Warning,\n        message,\n        priority: (options === null || options === void 0 ? void 0 : options.priority) || 7,\n        autoClose: (options === null || options === void 0 ? void 0 : options.autoClose) !== undefined ? options.autoClose : true\n      })));\n    }\n    // core alert method\n    alert(alert) {\n      alert.id = alert.id || this.defaultId;\n      alert.autoClose = alert.autoClose === undefined ? true : alert.autoClose;\n      this.subject.next(alert);\n    }\n    // clear alerts\n    clear(id = this.defaultId) {\n      this.subject.next(new Alert({\n        id\n      }));\n    }\n  }\n  AlertService.ɵfac = function AlertService_Factory(t) {\n    return new (t || AlertService)();\n  };\n  AlertService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AlertService,\n    factory: AlertService.ɵfac,\n    providedIn: 'root'\n  });\n  return AlertService;\n})();","map":{"version":3,"mappings":"AACA,SAAqBA,OAAO,QAAQ,MAAM;AAC1C,SAASC,MAAM,QAAQ,gBAAgB;AAEvC,SAASC,KAAK,EAAEC,SAAS,QAAQ,cAAc;;AAG/C,WAAaC,YAAY;EAAnB,MAAOA,YAAY;IADzBC;MAEY,YAAO,GAAG,IAAIL,OAAO,EAAS;MAC9B,cAAS,GAAG,eAAe;;IAEnC;IACAM,OAAO,CAACC,EAAE,GAAG,IAAI,CAACC,SAAS;MACvB,OAAO,IAAI,CAACC,OAAO,CAACC,YAAY,EAAE,CAACC,IAAI,CAACV,MAAM,CAACW,CAAC,IAAIA,CAAC,IAAIA,CAAC,CAACL,EAAE,KAAKA,EAAE,CAAC,CAAC;IAC1E;IAEA;IACAM,OAAO,CAACC,OAAe,EAAEC,OAAa;MAClC,IAAI,CAACC,KAAK,CAAC,IAAId,KAAK,iCACba,OAAO;QACVE,IAAI,EAAEd,SAAS,CAACe,OAAO;QACvBJ,OAAO;QACPK,QAAQ,EAAE,QAAO,aAAPJ,OAAO,uBAAPA,OAAO,CAAEI,QAAQ,KAAI,EAAE;QACjCC,SAAS,EAAE,QAAO,aAAPL,OAAO,uBAAPA,OAAO,CAAEK,SAAS,MAAKC,SAAS,GAAGN,OAAO,CAACK,SAAS,GAAG;MAAI,GACxE,CAAC;IACP;IAEAE,KAAK,CAACR,OAAe,EAAEC,OAAa;MAChC,IAAI,CAACC,KAAK,CAAC,IAAId,KAAK,iCACba,OAAO;QACVE,IAAI,EAAEd,SAAS,CAACoB,KAAK;QACrBT,OAAO;QACPK,QAAQ,EAAE,QAAO,aAAPJ,OAAO,uBAAPA,OAAO,CAAEI,QAAQ,KAAI,EAAE;QACjCC,SAAS,EAAE,QAAO,aAAPL,OAAO,uBAAPA,OAAO,CAAEK,SAAS,MAAKC,SAAS,GAAGN,OAAO,CAACK,SAAS,GAAG;MAAI,GACxE,CAAC;IACP;IAEAI,IAAI,CAACV,OAAe,EAAEC,OAAa;MAC/B,IAAI,CAACC,KAAK,CAAC,IAAId,KAAK,iCACba,OAAO;QACVE,IAAI,EAAEd,SAAS,CAACsB,IAAI;QACpBX,OAAO;QACPK,QAAQ,EAAE,QAAO,aAAPJ,OAAO,uBAAPA,OAAO,CAAEI,QAAQ,KAAI,CAAC;QAChCC,SAAS,EAAE,QAAO,aAAPL,OAAO,uBAAPA,OAAO,CAAEK,SAAS,MAAKC,SAAS,GAAGN,OAAO,CAACK,SAAS,GAAG;MAAI,GACxE,CAAC;IACP;IAEAM,IAAI,CAACZ,OAAe,EAAEC,OAAa;MAC/B,IAAI,CAACC,KAAK,CAAC,IAAId,KAAK,iCACba,OAAO;QACVE,IAAI,EAAEd,SAAS,CAACwB,OAAO;QACvBb,OAAO;QACPK,QAAQ,EAAE,QAAO,aAAPJ,OAAO,uBAAPA,OAAO,CAAEI,QAAQ,KAAI,CAAC;QAChCC,SAAS,EAAE,QAAO,aAAPL,OAAO,uBAAPA,OAAO,CAAEK,SAAS,MAAKC,SAAS,GAAGN,OAAO,CAACK,SAAS,GAAG;MAAI,GACxE,CAAC;IACP;IAEA;IACAJ,KAAK,CAACA,KAAY;MACdA,KAAK,CAACT,EAAE,GAAGS,KAAK,CAACT,EAAE,IAAI,IAAI,CAACC,SAAS;MACrCQ,KAAK,CAACI,SAAS,GAAIJ,KAAK,CAACI,SAAS,KAAKC,SAAS,GAAG,IAAI,GAAGL,KAAK,CAACI,SAAU;MAC1E,IAAI,CAACX,OAAO,CAACmB,IAAI,CAACZ,KAAK,CAAC;IAC5B;IAEA;IACAa,KAAK,CAACtB,EAAE,GAAG,IAAI,CAACC,SAAS;MACrB,IAAI,CAACC,OAAO,CAACmB,IAAI,CAAC,IAAI1B,KAAK,CAAC;QAAEK;MAAE,CAAE,CAAC,CAAC;IACxC;;;qBA5DSH,YAAY;EAAA;;WAAZA,YAAY;IAAA0B,SAAZ1B,YAAY;IAAA2B,YADC;EAAM;EAAA,OACnB3B,YAAY;AAAA","names":["Subject","filter","Alert","AlertType","AlertService","constructor","onAlert","id","defaultId","subject","asObservable","pipe","x","success","message","options","alert","type","Success","priority","autoClose","undefined","error","Error","info","Info","warn","Warning","next","clear","factory","providedIn"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\Restful-API-User-Management-System\\frontend\\src\\app\\_services\\alert.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\n\r\nimport { Alert, AlertType } from '@app/_models';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AlertService {\r\n    private subject = new Subject<Alert>();\r\n    private defaultId = 'default-alert';\r\n\r\n    // enable subscribing to alerts observable\r\n    onAlert(id = this.defaultId): Observable<Alert> {\r\n        return this.subject.asObservable().pipe(filter(x => x && x.id === id));\r\n    }\r\n\r\n    // convenience methods\r\n    success(message: string, options?: any) {\r\n        this.alert(new Alert({ \r\n            ...options, \r\n            type: AlertType.Success, \r\n            message,\r\n            priority: options?.priority || 10, // Higher default priority for success messages\r\n            autoClose: options?.autoClose !== undefined ? options.autoClose : true \r\n        }));\r\n    }\r\n\r\n    error(message: string, options?: any) {\r\n        this.alert(new Alert({ \r\n            ...options, \r\n            type: AlertType.Error, \r\n            message,\r\n            priority: options?.priority || 10,\r\n            autoClose: options?.autoClose !== undefined ? options.autoClose : true \r\n        }));\r\n    }\r\n\r\n    info(message: string, options?: any) {\r\n        this.alert(new Alert({ \r\n            ...options, \r\n            type: AlertType.Info, \r\n            message,\r\n            priority: options?.priority || 5, // Lower default priority for info messages\r\n            autoClose: options?.autoClose !== undefined ? options.autoClose : true \r\n        }));\r\n    }\r\n\r\n    warn(message: string, options?: any) {\r\n        this.alert(new Alert({ \r\n            ...options, \r\n            type: AlertType.Warning, \r\n            message,\r\n            priority: options?.priority || 7,\r\n            autoClose: options?.autoClose !== undefined ? options.autoClose : true \r\n        }));\r\n    }\r\n\r\n    // core alert method\r\n    alert(alert: Alert) {\r\n        alert.id = alert.id || this.defaultId;\r\n        alert.autoClose = (alert.autoClose === undefined ? true : alert.autoClose);\r\n        this.subject.next(alert);\r\n    }\r\n\r\n    // clear alerts\r\n    clear(id = this.defaultId) {\r\n        this.subject.next(new Alert({ id }));\r\n    }\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}